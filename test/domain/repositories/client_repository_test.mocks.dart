// Mocks generated by Mockito 5.4.6 from annotations
// in lapor_kerja/test/domain/repositories/client_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:lapor_kerja/domain/entities/client_entity.dart' as _i4;
import 'package:lapor_kerja/domain/repositories/client_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ClientRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientRepository extends _i1.Mock implements _i2.ClientRepository {
  MockClientRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.ClientEntity>> watchAllClients() =>
      (super.noSuchMethod(
            Invocation.method(#watchAllClients, []),
            returnValue: _i3.Stream<List<_i4.ClientEntity>>.empty(),
          )
          as _i3.Stream<List<_i4.ClientEntity>>);

  @override
  _i3.Future<_i4.ClientEntity?> getClientById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getClientById, [id]),
            returnValue: _i3.Future<_i4.ClientEntity?>.value(),
          )
          as _i3.Future<_i4.ClientEntity?>);

  @override
  _i3.Future<void> createClient(_i4.ClientEntity? client) =>
      (super.noSuchMethod(
            Invocation.method(#createClient, [client]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateClient(_i4.ClientEntity? client) =>
      (super.noSuchMethod(
            Invocation.method(#updateClient, [client]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> softDeleteClient(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#softDeleteClient, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.ClientEntity>> getUnsyncedClients() =>
      (super.noSuchMethod(
            Invocation.method(#getUnsyncedClients, []),
            returnValue: _i3.Future<List<_i4.ClientEntity>>.value(
              <_i4.ClientEntity>[],
            ),
          )
          as _i3.Future<List<_i4.ClientEntity>>);

  @override
  _i3.Future<void> markClientAsSynced(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#markClientAsSynced, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
